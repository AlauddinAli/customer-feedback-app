{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alauddin Ali\\\\customer-feedback\\\\frontend\\\\src\\\\pages\\\\Admin.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./Admin.css\";\n\n// function Admin() {\n//   const [feedbacks, setFeedbacks] = useState([]);\n//   const navigate = useNavigate();\n\n//   // Fetch feedback list\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/feedback\")\n//       .then((res) => res.json())\n//       .then((data) => setFeedbacks(data))\n//       .catch((err) => console.error(\"Error fetching feedbacks:\", err));\n//   }, []);\n\n//   // Delete feedback\n//   const handleDelete = (id) => {\n//     fetch(`http://localhost:5000/feedback/${id}`, { method: \"DELETE\" })\n//       .then(() => setFeedbacks(feedbacks.filter((f) => f._id !== id)))\n//       .catch((err) => console.error(\"Error deleting feedback:\", err));\n//   };\n\n//   // Edit feedback\n//   const handleEdit = (id) => {\n//     const newText = prompt(\"Enter new feedback:\");\n//     if (!newText) return;\n//     fetch(`http://localhost:5000/feedback/${id}`, {\n//       method: \"PUT\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ content: newText }),\n//     })\n//       .then((res) => res.json())\n//       .then((updated) => {\n//         setFeedbacks(feedbacks.map((f) => (f._id === id ? updated : f)));\n//       })\n//       .catch((err) => console.error(\"Error editing feedback:\", err));\n//   };\n\n//   // View feedback\n//   const handleView = (content) => {\n//     alert(`Feedback: ${content}`);\n//   };\n\n//   // Logout\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\"); // remove JWT\n//     navigate(\"/login\");\n//   };\n\n//   return (\n//     <div className=\"admin-container\">\n//       <h2 className=\"admin-title\">Admin Feedback Dashboard</h2>\n//       <table className=\"admin-table\">\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Feedback</th>\n//             <th>Date</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {feedbacks.length > 0 ? (\n//             feedbacks.map((f, index) => (\n//               <tr key={f._id}>\n//                 <td>{index + 1}</td>\n//                 <td>{f.content}</td>\n//                 <td>{new Date(f.createdAt).toISOString().split(\"T\")[0]}</td>\n//                 <td>\n//                   <button onClick={() => handleView(f.content)}>View</button>\n//                   <button onClick={() => handleEdit(f._id)}>Edit</button>\n//                   <button onClick={() => handleDelete(f._id)}>Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"4\">No feedback available</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       <button className=\"logout-btn\" onClick={handleLogout}>\n//         Log Out\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default Admin;\n\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./Admin.css\";\n\n// function Admin() {\n//   const [feedbacks, setFeedbacks] = useState([]);\n//   const navigate = useNavigate();\n\n//   // Check if user is admin\n//   useEffect(() => {\n//     const user = JSON.parse(localStorage.getItem(\"user\"));\n//     if (!user || user.role !== \"admin\") {\n//       alert(\"Access denied. Admin only!\");\n//       navigate(\"/login\");\n//     }\n//   }, [navigate]);\n\n//   // Fetch feedback list\n//   useEffect(() => {\n//     fetchFeedbacks();\n//   }, []);\n\n//   const fetchFeedbacks = () => {\n//     const token = localStorage.getItem(\"token\");\n\n//     fetch(\"http://localhost:5000/feedback\", {\n//       headers: { Authorization: `Bearer ${token}` },\n//     })\n//       .then((res) => {\n//         if (!res.ok) throw new Error(\"Failed to fetch\");\n//         return res.json();\n//       })\n//       .then((data) => setFeedbacks(data))\n//       .catch((err) => console.error(\"Error fetching feedbacks:\", err));\n//   };\n\n//   // Delete feedback\n//   const handleDelete = (id) => {\n//     if (!window.confirm(\"Are you sure you want to delete this feedback?\")) {\n//       return;\n//     }\n\n//     const token = localStorage.getItem(\"token\");\n\n//     fetch(`http://localhost:5000/feedback/${id}`, {\n//       method: \"DELETE\",\n//       headers: { Authorization: `Bearer ${token}` },\n//     })\n//       .then((res) => {\n//         if (!res.ok) throw new Error(\"Failed to delete\");\n//         return res.json();\n//       })\n//       .then(() => {\n//         alert(\"Deleted successfully!\");\n//         setFeedbacks(feedbacks.filter((f) => f._id !== id));\n//       })\n//       .catch((err) => console.error(\"Error deleting feedback:\", err));\n//   };\n\n//   // Edit feedback\n//   const handleEdit = (id) => {\n//     const newText = prompt(\"Enter new feedback:\");\n//     if (!newText || newText.trim() === \"\") return;\n\n//     const token = localStorage.getItem(\"token\");\n\n//     fetch(`http://localhost:5000/feedback/${id}`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${token}`,\n//       },\n//       body: JSON.stringify({ content: newText }),\n//     })\n//       .then((res) => {\n//         if (!res.ok) throw new Error(\"Failed to update\");\n//         return res.json();\n//       })\n//       .then((updated) => {\n//         alert(\"Updated successfully!\");\n//         setFeedbacks(feedbacks.map((f) => (f._id === id ? updated : f)));\n//       })\n//       .catch((err) => console.error(\"Error editing feedback:\", err));\n//   };\n\n//   // View feedback\n//   const handleView = (content) => {\n//     alert(`Feedback: ${content}`);\n//   };\n\n//   // Logout\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"user\");\n//     navigate(\"/login\");\n//   };\n\n//   return (\n//     <div className=\"admin-container\">\n//       <h2 className=\"admin-title\">Admin Feedback Dashboard</h2>\n//       <table className=\"admin-table\">\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>User</th>\n//             <th>Feedback</th>\n//             <th>Date</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {feedbacks.length > 0 ? (\n//             feedbacks.map((f, index) => (\n//               <tr key={f._id}>\n//                 <td>{index + 1}</td>\n//                 <td>{f.user?.email || \"Unknown\"}</td>\n//                 <td>{f.content}</td>\n//                 <td>{new Date(f.createdAt).toLocaleDateString()}</td>\n//                 <td>\n//                   <button onClick={() => handleView(f.content)}>View</button>\n//                   <button onClick={() => handleEdit(f._id)}>Edit</button>\n//                   <button onClick={() => handleDelete(f._id)}>Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"5\">No feedback available</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       <button className=\"logout-btn\" onClick={handleLogout}>\n//         Log Out\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default Admin;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Admin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const [feedbacks, setFeedbacks] = useState([]);\n  const navigate = useNavigate();\n\n  // Check if user is admin\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!user || user.role !== \"admin\") {\n      alert(\"Access denied. Admin only!\");\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  // Fetch feedback list\n  useEffect(() => {\n    fetchFeedbacks();\n  }, []);\n  const fetchFeedbacks = () => {\n    const token = localStorage.getItem(\"token\");\n    fetch(\"http://localhost:5000/feedback\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Failed to fetch\");\n      return res.json();\n    }).then(data => setFeedbacks(data)).catch(err => console.error(\"Error fetching feedbacks:\", err));\n  };\n\n  // Delete feedback\n  const handleDelete = id => {\n    if (!window.confirm(\"Are you sure you want to delete this feedback?\")) {\n      return;\n    }\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:5000/feedback/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Failed to delete\");\n      return res.json();\n    }).then(() => {\n      alert(\"Deleted successfully!\");\n      setFeedbacks(feedbacks.filter(f => f._id !== id));\n    }).catch(err => console.error(\"Error deleting feedback:\", err));\n  };\n\n  // Edit feedback\n  const handleEdit = id => {\n    const newText = prompt(\"Enter new feedback:\");\n    if (!newText || newText.trim() === \"\") return;\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:5000/feedback/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        content: newText\n      })\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Failed to update\");\n      return res.json();\n    }).then(updated => {\n      alert(\"Updated successfully!\");\n      setFeedbacks(feedbacks.map(f => f._id === id ? updated : f));\n    }).catch(err => console.error(\"Error editing feedback:\", err));\n  };\n\n  // View feedback\n  const handleView = content => {\n    alert(`Feedback: ${content}`);\n  };\n\n  // Logout\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"admin-title\",\n      children: \"Admin Feedback Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"admin-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: feedbacks.length > 0 ? feedbacks.map((f, index) => {\n          var _f$user;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_f$user = f.user) === null || _f$user === void 0 ? void 0 : _f$user.email) || \"Unknown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: f.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(f.createdAt).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleView(f.content),\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(f._id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(f._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)]\n          }, f._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            children: \"No feedback available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-btn\",\n      onClick: handleLogout,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"JnDfpgMOxGFkKfAM+QWxD+0cuUs=\", false, function () {\n  return [useNavigate];\n});\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Admin","_s","feedbacks","setFeedbacks","navigate","user","JSON","parse","localStorage","getItem","role","alert","fetchFeedbacks","token","fetch","headers","Authorization","then","res","ok","Error","json","data","catch","err","console","error","handleDelete","id","window","confirm","method","filter","f","_id","handleEdit","newText","prompt","trim","body","stringify","content","updated","map","handleView","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","_f$user","email","Date","createdAt","toLocaleDateString","onClick","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/Alauddin Ali/customer-feedback/frontend/src/pages/Admin.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"./Admin.css\";\r\n\r\n// function Admin() {\r\n//   const [feedbacks, setFeedbacks] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   // Fetch feedback list\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/feedback\")\r\n//       .then((res) => res.json())\r\n//       .then((data) => setFeedbacks(data))\r\n//       .catch((err) => console.error(\"Error fetching feedbacks:\", err));\r\n//   }, []);\r\n\r\n//   // Delete feedback\r\n//   const handleDelete = (id) => {\r\n//     fetch(`http://localhost:5000/feedback/${id}`, { method: \"DELETE\" })\r\n//       .then(() => setFeedbacks(feedbacks.filter((f) => f._id !== id)))\r\n//       .catch((err) => console.error(\"Error deleting feedback:\", err));\r\n//   };\r\n\r\n//   // Edit feedback\r\n//   const handleEdit = (id) => {\r\n//     const newText = prompt(\"Enter new feedback:\");\r\n//     if (!newText) return;\r\n//     fetch(`http://localhost:5000/feedback/${id}`, {\r\n//       method: \"PUT\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ content: newText }),\r\n//     })\r\n//       .then((res) => res.json())\r\n//       .then((updated) => {\r\n//         setFeedbacks(feedbacks.map((f) => (f._id === id ? updated : f)));\r\n//       })\r\n//       .catch((err) => console.error(\"Error editing feedback:\", err));\r\n//   };\r\n\r\n//   // View feedback\r\n//   const handleView = (content) => {\r\n//     alert(`Feedback: ${content}`);\r\n//   };\r\n\r\n//   // Logout\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"token\"); // remove JWT\r\n//     navigate(\"/login\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"admin-container\">\r\n//       <h2 className=\"admin-title\">Admin Feedback Dashboard</h2>\r\n//       <table className=\"admin-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>Feedback</th>\r\n//             <th>Date</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {feedbacks.length > 0 ? (\r\n//             feedbacks.map((f, index) => (\r\n//               <tr key={f._id}>\r\n//                 <td>{index + 1}</td>\r\n//                 <td>{f.content}</td>\r\n//                 <td>{new Date(f.createdAt).toISOString().split(\"T\")[0]}</td>\r\n//                 <td>\r\n//                   <button onClick={() => handleView(f.content)}>View</button>\r\n//                   <button onClick={() => handleEdit(f._id)}>Edit</button>\r\n//                   <button onClick={() => handleDelete(f._id)}>Delete</button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"4\">No feedback available</td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n//       <button className=\"logout-btn\" onClick={handleLogout}>\r\n//         Log Out\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Admin;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"./Admin.css\";\r\n\r\n// function Admin() {\r\n//   const [feedbacks, setFeedbacks] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   // Check if user is admin\r\n//   useEffect(() => {\r\n//     const user = JSON.parse(localStorage.getItem(\"user\"));\r\n//     if (!user || user.role !== \"admin\") {\r\n//       alert(\"Access denied. Admin only!\");\r\n//       navigate(\"/login\");\r\n//     }\r\n//   }, [navigate]);\r\n\r\n//   // Fetch feedback list\r\n//   useEffect(() => {\r\n//     fetchFeedbacks();\r\n//   }, []);\r\n\r\n//   const fetchFeedbacks = () => {\r\n//     const token = localStorage.getItem(\"token\");\r\n    \r\n//     fetch(\"http://localhost:5000/feedback\", {\r\n//       headers: { Authorization: `Bearer ${token}` },\r\n//     })\r\n//       .then((res) => {\r\n//         if (!res.ok) throw new Error(\"Failed to fetch\");\r\n//         return res.json();\r\n//       })\r\n//       .then((data) => setFeedbacks(data))\r\n//       .catch((err) => console.error(\"Error fetching feedbacks:\", err));\r\n//   };\r\n\r\n//   // Delete feedback\r\n//   const handleDelete = (id) => {\r\n//     if (!window.confirm(\"Are you sure you want to delete this feedback?\")) {\r\n//       return;\r\n//     }\r\n\r\n//     const token = localStorage.getItem(\"token\");\r\n    \r\n//     fetch(`http://localhost:5000/feedback/${id}`, {\r\n//       method: \"DELETE\",\r\n//       headers: { Authorization: `Bearer ${token}` },\r\n//     })\r\n//       .then((res) => {\r\n//         if (!res.ok) throw new Error(\"Failed to delete\");\r\n//         return res.json();\r\n//       })\r\n//       .then(() => {\r\n//         alert(\"Deleted successfully!\");\r\n//         setFeedbacks(feedbacks.filter((f) => f._id !== id));\r\n//       })\r\n//       .catch((err) => console.error(\"Error deleting feedback:\", err));\r\n//   };\r\n\r\n//   // Edit feedback\r\n//   const handleEdit = (id) => {\r\n//     const newText = prompt(\"Enter new feedback:\");\r\n//     if (!newText || newText.trim() === \"\") return;\r\n\r\n//     const token = localStorage.getItem(\"token\");\r\n    \r\n//     fetch(`http://localhost:5000/feedback/${id}`, {\r\n//       method: \"PUT\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: `Bearer ${token}`,\r\n//       },\r\n//       body: JSON.stringify({ content: newText }),\r\n//     })\r\n//       .then((res) => {\r\n//         if (!res.ok) throw new Error(\"Failed to update\");\r\n//         return res.json();\r\n//       })\r\n//       .then((updated) => {\r\n//         alert(\"Updated successfully!\");\r\n//         setFeedbacks(feedbacks.map((f) => (f._id === id ? updated : f)));\r\n//       })\r\n//       .catch((err) => console.error(\"Error editing feedback:\", err));\r\n//   };\r\n\r\n//   // View feedback\r\n//   const handleView = (content) => {\r\n//     alert(`Feedback: ${content}`);\r\n//   };\r\n\r\n//   // Logout\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"token\");\r\n//     localStorage.removeItem(\"user\");\r\n//     navigate(\"/login\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"admin-container\">\r\n//       <h2 className=\"admin-title\">Admin Feedback Dashboard</h2>\r\n//       <table className=\"admin-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>User</th>\r\n//             <th>Feedback</th>\r\n//             <th>Date</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {feedbacks.length > 0 ? (\r\n//             feedbacks.map((f, index) => (\r\n//               <tr key={f._id}>\r\n//                 <td>{index + 1}</td>\r\n//                 <td>{f.user?.email || \"Unknown\"}</td>\r\n//                 <td>{f.content}</td>\r\n//                 <td>{new Date(f.createdAt).toLocaleDateString()}</td>\r\n//                 <td>\r\n//                   <button onClick={() => handleView(f.content)}>View</button>\r\n//                   <button onClick={() => handleEdit(f._id)}>Edit</button>\r\n//                   <button onClick={() => handleDelete(f._id)}>Delete</button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"5\">No feedback available</td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n//       <button className=\"logout-btn\" onClick={handleLogout}>\r\n//         Log Out\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Admin;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Admin.css\";\r\n\r\nfunction Admin() {\r\n  const [feedbacks, setFeedbacks] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Check if user is admin\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (!user || user.role !== \"admin\") {\r\n      alert(\"Access denied. Admin only!\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Fetch feedback list\r\n  useEffect(() => {\r\n    fetchFeedbacks();\r\n  }, []);\r\n\r\n  const fetchFeedbacks = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    \r\n    fetch(\"http://localhost:5000/feedback\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Failed to fetch\");\r\n        return res.json();\r\n      })\r\n      .then((data) => setFeedbacks(data))\r\n      .catch((err) => console.error(\"Error fetching feedbacks:\", err));\r\n  };\r\n\r\n  // Delete feedback\r\n  const handleDelete = (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this feedback?\")) {\r\n      return;\r\n    }\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    \r\n    fetch(`http://localhost:5000/feedback/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Failed to delete\");\r\n        return res.json();\r\n      })\r\n      .then(() => {\r\n        alert(\"Deleted successfully!\");\r\n        setFeedbacks(feedbacks.filter((f) => f._id !== id));\r\n      })\r\n      .catch((err) => console.error(\"Error deleting feedback:\", err));\r\n  };\r\n\r\n  // Edit feedback\r\n  const handleEdit = (id) => {\r\n    const newText = prompt(\"Enter new feedback:\");\r\n    if (!newText || newText.trim() === \"\") return;\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    \r\n    fetch(`http://localhost:5000/feedback/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ content: newText }),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Failed to update\");\r\n        return res.json();\r\n      })\r\n      .then((updated) => {\r\n        alert(\"Updated successfully!\");\r\n        setFeedbacks(feedbacks.map((f) => (f._id === id ? updated : f)));\r\n      })\r\n      .catch((err) => console.error(\"Error editing feedback:\", err));\r\n  };\r\n\r\n  // View feedback\r\n  const handleView = (content) => {\r\n    alert(`Feedback: ${content}`);\r\n  };\r\n\r\n  // Logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"admin-title\">Admin Feedback Dashboard</h2>\r\n      <table className=\"admin-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>User</th>\r\n            <th>Feedback</th>\r\n            <th>Date</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {feedbacks.length > 0 ? (\r\n            feedbacks.map((f, index) => (\r\n              <tr key={f._id}>\r\n                <td>{index + 1}</td>\r\n                <td>{f.user?.email || \"Unknown\"}</td>\r\n                <td>{f.content}</td>\r\n                <td>{new Date(f.createdAt).toLocaleDateString()}</td>\r\n                <td>\r\n                  <button onClick={() => handleView(f.content)}>View</button>\r\n                  <button onClick={() => handleEdit(f._id)}>Edit</button>\r\n                  <button onClick={() => handleDelete(f._id)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"5\">No feedback available</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <button className=\"logout-btn\" onClick={handleLogout}>\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,K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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}