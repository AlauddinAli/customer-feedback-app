{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alauddin Ali\\\\customer-feedback\\\\frontend\\\\src\\\\pages\\\\Feedback.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./Feedback.css\";\n\n// function Feedback() {\n//   const [feedback, setFeedback] = useState(\"\");\n//   const [mode, setMode] = useState(\"add\");\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!feedback.trim()) {\n//       alert(\"Please write feedback before submitting!\");\n//       return;\n//     }\n//     alert(`Feedback ${mode === \"add\" ? \"added\" : \"edited\"}: ${feedback}`);\n//     setFeedback(\"\");\n//   };\n\n//   return (\n//     <div className=\"feedback-container\">\n//       <div className=\"feedback-card\">\n//         <h2>Feedback</h2>\n\n//         <div className=\"feedback-buttons\">\n//           <button\n//             className={mode === \"add\" ? \"active\" : \"\"}\n//             onClick={() => setMode(\"add\")}\n//             type=\"button\"\n//           >\n//             Add Feedback\n//           </button>\n//           <button\n//             className={mode === \"edit\" ? \"active\" : \"\"}\n//             onClick={() => setMode(\"edit\")}\n//             type=\"button\"\n//           >\n//             Edit Feedback\n//           </button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <label>Your Feedback:</label>\n//           <textarea\n//             value={feedback}\n//             onChange={(e) => setFeedback(e.target.value)}\n//             placeholder=\"Write your feedback here...\"\n//           />\n//           <button type=\"submit\" className=\"submit-btn\">Submit</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Feedback;\n// import React from \"react\";\n\n// function Feedback() {\n//   return <div>Hello from Feedback</div>;\n// }\n\n// export default Feedback;\n// import React, { useState } from \"react\";\n\n// function Feedback() {\n//   const [feedback, setFeedback] = useState(\"\");\n//   const [mode, setMode] = useState(\"add\");\n\n//   return <div>Hello from Feedback - State working!</div>;\n// }\n\n// export default Feedback;\n\nimport React, { useState } from \"react\";\nimport \"./Feedback.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feedback() {\n  _s();\n  const [feedback, setFeedback] = useState(\"\");\n  const [mode, setMode] = useState(\"add\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!feedback.trim()) {\n      alert(\"Please write feedback before submitting!\");\n      return;\n    }\n    alert(`Feedback ${mode === \"add\" ? \"added\" : \"edited\"}: ${feedback}`);\n    setFeedback(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: mode === \"add\" ? \"active\" : \"\",\n          onClick: () => setMode(\"add\"),\n          type: \"button\",\n          children: \"Add Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: mode === \"edit\" ? \"active\" : \"\",\n          onClick: () => setMode(\"edit\"),\n          type: \"button\",\n          children: \"Edit Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Your Feedback:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: feedback,\n          onChange: e => setFeedback(e.target.value),\n          placeholder: \"Write your feedback here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Feedback, \"u4//Ber2uObBy3G93RaI/d8IqAc=\");\n_c = Feedback;\nexport default Feedback;\nvar _c;\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Feedback","_s","feedback","setFeedback","mode","setMode","handleSubmit","e","preventDefault","trim","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onSubmit","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Alauddin Ali/customer-feedback/frontend/src/pages/Feedback.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./Feedback.css\";\r\n\r\n// function Feedback() {\r\n//   const [feedback, setFeedback] = useState(\"\");\r\n//   const [mode, setMode] = useState(\"add\");\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!feedback.trim()) {\r\n//       alert(\"Please write feedback before submitting!\");\r\n//       return;\r\n//     }\r\n//     alert(`Feedback ${mode === \"add\" ? \"added\" : \"edited\"}: ${feedback}`);\r\n//     setFeedback(\"\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"feedback-container\">\r\n//       <div className=\"feedback-card\">\r\n//         <h2>Feedback</h2>\r\n\r\n//         <div className=\"feedback-buttons\">\r\n//           <button\r\n//             className={mode === \"add\" ? \"active\" : \"\"}\r\n//             onClick={() => setMode(\"add\")}\r\n//             type=\"button\"\r\n//           >\r\n//             Add Feedback\r\n//           </button>\r\n//           <button\r\n//             className={mode === \"edit\" ? \"active\" : \"\"}\r\n//             onClick={() => setMode(\"edit\")}\r\n//             type=\"button\"\r\n//           >\r\n//             Edit Feedback\r\n//           </button>\r\n//         </div>\r\n\r\n//         <form onSubmit={handleSubmit}>\r\n//           <label>Your Feedback:</label>\r\n//           <textarea\r\n//             value={feedback}\r\n//             onChange={(e) => setFeedback(e.target.value)}\r\n//             placeholder=\"Write your feedback here...\"\r\n//           />\r\n//           <button type=\"submit\" className=\"submit-btn\">Submit</button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Feedback;\r\n// import React from \"react\";\r\n\r\n// function Feedback() {\r\n//   return <div>Hello from Feedback</div>;\r\n// }\r\n\r\n// export default Feedback;\r\n// import React, { useState } from \"react\";\r\n\r\n// function Feedback() {\r\n//   const [feedback, setFeedback] = useState(\"\");\r\n//   const [mode, setMode] = useState(\"add\");\r\n\r\n//   return <div>Hello from Feedback - State working!</div>;\r\n// }\r\n\r\n// export default Feedback;\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./Feedback.css\";\r\n\r\nfunction Feedback() {\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [mode, setMode] = useState(\"add\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!feedback.trim()) {\r\n      alert(\"Please write feedback before submitting!\");\r\n      return;\r\n    }\r\n    alert(`Feedback ${mode === \"add\" ? \"added\" : \"edited\"}: ${feedback}`);\r\n    setFeedback(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"feedback-container\">\r\n      <div className=\"feedback-card\">\r\n        <h2>Feedback</h2>\r\n\r\n        <div className=\"feedback-buttons\">\r\n          <button\r\n            className={mode === \"add\" ? \"active\" : \"\"}\r\n            onClick={() => setMode(\"add\")}\r\n            type=\"button\"\r\n          >\r\n            Add Feedback\r\n          </button>\r\n          <button\r\n            className={mode === \"edit\" ? \"active\" : \"\"}\r\n            onClick={() => setMode(\"edit\")}\r\n            type=\"button\"\r\n          >\r\n            Edit Feedback\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <label>Your Feedback:</label>\r\n          <textarea\r\n            value={feedback}\r\n            onChange={(e) => setFeedback(e.target.value)}\r\n            placeholder=\"Write your feedback here...\"\r\n          />\r\n          <button type=\"submit\" className=\"submit-btn\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feedback;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,QAAQ,CAACO,IAAI,CAAC,CAAC,EAAE;MACpBC,KAAK,CAAC,0CAA0C,CAAC;MACjD;IACF;IACAA,KAAK,CAAC,YAAYN,IAAI,KAAK,KAAK,GAAG,OAAO,GAAG,QAAQ,KAAKF,QAAQ,EAAE,CAAC;IACrEC,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,oBACEJ,OAAA;IAAKY,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjCb,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5Bb,OAAA;QAAAa,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEjBjB,OAAA;QAAKY,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/Bb,OAAA;UACEY,SAAS,EAAEP,IAAI,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAG;UAC1Ca,OAAO,EAAEA,CAAA,KAAMZ,OAAO,CAAC,KAAK,CAAE;UAC9Ba,IAAI,EAAC,QAAQ;UAAAN,QAAA,EACd;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjB,OAAA;UACEY,SAAS,EAAEP,IAAI,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAG;UAC3Ca,OAAO,EAAEA,CAAA,KAAMZ,OAAO,CAAC,MAAM,CAAE;UAC/Ba,IAAI,EAAC,QAAQ;UAAAN,QAAA,EACd;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENjB,OAAA;QAAMoB,QAAQ,EAAEb,YAAa;QAAAM,QAAA,gBAC3Bb,OAAA;UAAAa,QAAA,EAAO;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7BjB,OAAA;UACEqB,KAAK,EAAElB,QAAS;UAChBmB,QAAQ,EAAGd,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;UAC7CG,WAAW,EAAC;QAA6B;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACFjB,OAAA;UAAQmB,IAAI,EAAC,QAAQ;UAACP,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CAhDQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAkDjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}